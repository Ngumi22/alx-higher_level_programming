How to Use 2-matrix_divided.py
==============================

This module defines a function ``matrix_divided(matrix, div)`` for dividing all elements of a matrix.

Usage
=====

``matrix_divided(...)`` returns a new matrix with elements rounded to 2 decimal places after dividing by the specified divisor.

::

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

The original matrix remains unchanged.

::

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

Exceptions
===========

The function raises exceptions for invalid input.

If matrix is not a list of lists of integers or floats:

::

    >>> matrix_divided("invalid_matrix", 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

If each row of the matrix does not have the same size:

::

    >>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

If div is not a number (integer or float):

::

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "invalid_div")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

If div is equal to 0:

::

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
